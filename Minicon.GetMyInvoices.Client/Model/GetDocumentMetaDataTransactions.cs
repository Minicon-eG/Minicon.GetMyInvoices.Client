/* 
 * GetMyInvoices API Documentation
 *
 * Documentation for GetMyInvoices API endpoints.
 *
 * OpenAPI spec version: v3
 * Contact: support@getmyinvoices.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace Minicon.GetMyInvoices.Client.Model;

/// <summary>
///     GetDocumentMetaDataTransactions
/// </summary>
[DataContract]
public sealed class GetDocumentMetaDataTransactions : IEquatable<GetDocumentMetaDataTransactions>
{
	/// <summary>
	///     Initializes a new instance of the <see cref="GetDocumentMetaDataTransactions" /> class.
	/// </summary>
	/// <param name="totalCount">Total Count.</param>
	/// <param name="records">records.</param>
	public GetDocumentMetaDataTransactions(int? totalCount = default,
		List<GetDocumentMetaDataTransactionsRecords> records = default)
	{
		TotalCount = totalCount;
		Records = records;
	}

	/// <summary>
	///     Total Count
	/// </summary>
	/// <value>Total Count</value>
	[DataMember(Name = "totalCount", EmitDefaultValue = false)]
	public int? TotalCount { get; set; }

	/// <summary>
	///     Gets or Sets Records
	/// </summary>
	[DataMember(Name = "records", EmitDefaultValue = false)]
	public List<GetDocumentMetaDataTransactionsRecords> Records { get; set; }

	/// <summary>
	///     Returns true if GetDocumentMetaDataTransactions instances are equal
	/// </summary>
	/// <param name="input">Instance of GetDocumentMetaDataTransactions to be compared</param>
	/// <returns>Boolean</returns>
	public bool Equals(GetDocumentMetaDataTransactions input)
	{
		if (input == null)
		{
			return false;
		}

		return
			(
				TotalCount == input.TotalCount ||
				(TotalCount != null &&
				 TotalCount.Equals(input.TotalCount))
			) &&
			(
				Records == input.Records ||
				(Records != null &&
				 input.Records != null &&
				 Records.SequenceEqual(input.Records))
			);
	}

	/// <summary>
	///     Returns the string presentation of the object
	/// </summary>
	/// <returns>String presentation of the object</returns>
	public override string ToString()
	{
		var sb = new StringBuilder();
		sb.Append("class GetDocumentMetaDataTransactions {\n");
		sb.Append("  TotalCount: ").Append(TotalCount).Append("\n");
		sb.Append("  Records: ").Append(Records).Append("\n");
		sb.Append("}\n");
		return sb.ToString();
	}

	/// <summary>
	///     Returns the JSON string presentation of the object
	/// </summary>
	/// <returns>JSON string presentation of the object</returns>
	public string ToJson()
	{
		return JsonConvert.SerializeObject(this, Formatting.Indented);
	}

	/// <summary>
	///     Returns true if objects are equal
	/// </summary>
	/// <param name="input">Object to be compared</param>
	/// <returns>Boolean</returns>
	public override bool Equals(object input)
	{
		return Equals(input as GetDocumentMetaDataTransactions);
	}

	/// <summary>
	///     Gets the hash code
	/// </summary>
	/// <returns>Hash code</returns>
	public override int GetHashCode()
	{
		unchecked // Overflow is fine, just wrap
		{
			int hashCode = 41;
			if (TotalCount != null)
			{
				hashCode = hashCode * 59 + TotalCount.GetHashCode();
			}

			if (Records != null)
			{
				hashCode = hashCode * 59 + Records.GetHashCode();
			}

			return hashCode;
		}
	}
}
