/* 
 * GetMyInvoices API Documentation
 *
 * Documentation for GetMyInvoices API endpoints.
 *
 * OpenAPI spec version: v3
 * Contact: support@getmyinvoices.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace Minicon.GetMyInvoices.Client.Model;

/// <summary>
///     TransactionUidTagsBody
/// </summary>
[DataContract]
public sealed class TransactionUidTagsBody : IEquatable<TransactionUidTagsBody>
{
	/// <summary>
	///     Initializes a new instance of the <see cref="TransactionUidTagsBody" /> class.
	/// </summary>
	/// <param name="tags">Tags (Array) (required).</param>
	public TransactionUidTagsBody(List<string> tags = default)
	{
		// to ensure "tags" is required (not null)
		if (tags == null)
		{
			throw new InvalidDataException("tags is a required property for TransactionUidTagsBody and cannot be null");
		}

		Tags = tags;
	}

	/// <summary>
	///     Tags (Array)
	/// </summary>
	/// <value>Tags (Array)</value>
	[DataMember(Name = "tags", EmitDefaultValue = false)]
	public List<string> Tags { get; set; }

	/// <summary>
	///     Returns true if TransactionUidTagsBody instances are equal
	/// </summary>
	/// <param name="input">Instance of TransactionUidTagsBody to be compared</param>
	/// <returns>Boolean</returns>
	public bool Equals(TransactionUidTagsBody input)
	{
		if (input == null)
		{
			return false;
		}

		return
			Tags == input.Tags ||
			(Tags != null &&
			 input.Tags != null &&
			 Tags.SequenceEqual(input.Tags));
	}

	/// <summary>
	///     Returns the string presentation of the object
	/// </summary>
	/// <returns>String presentation of the object</returns>
	public override string ToString()
	{
		var sb = new StringBuilder();
		sb.Append("class TransactionUidTagsBody {\n");
		sb.Append("  Tags: ").Append(Tags).Append("\n");
		sb.Append("}\n");
		return sb.ToString();
	}

	/// <summary>
	///     Returns the JSON string presentation of the object
	/// </summary>
	/// <returns>JSON string presentation of the object</returns>
	public string ToJson()
	{
		return JsonConvert.SerializeObject(this, Formatting.Indented);
	}

	/// <summary>
	///     Returns true if objects are equal
	/// </summary>
	/// <param name="input">Object to be compared</param>
	/// <returns>Boolean</returns>
	public override bool Equals(object input)
	{
		return Equals(input as TransactionUidTagsBody);
	}

	/// <summary>
	///     Gets the hash code
	/// </summary>
	/// <returns>Hash code</returns>
	public override int GetHashCode()
	{
		unchecked // Overflow is fine, just wrap
		{
			int hashCode = 41;
			if (Tags != null)
			{
				hashCode = hashCode * 59 + Tags.GetHashCode();
			}

			return hashCode;
		}
	}
}
