/* 
 * GetMyInvoices API Documentation
 *
 * Documentation for GetMyInvoices API endpoints.
 *
 * OpenAPI spec version: v3
 * Contact: support@getmyinvoices.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace Minicon.GetMyInvoices.Client.Model;

/// <summary>
///     ListPortalsRecords
/// </summary>
[DataContract]
public sealed class ListPortalsRecords : IEquatable<ListPortalsRecords>
{
	/// <summary>
	///     Initializes a new instance of the <see cref="ListPortalsRecords" /> class.
	/// </summary>
	/// <param name="supplierUid">Unique ID of Portal.</param>
	/// <param name="name">Name of Portal.</param>
	public ListPortalsRecords(int? supplierUid = default, string name = default)
	{
		SupplierUid = supplierUid;
		Name = name;
	}

	/// <summary>
	///     Unique ID of Portal
	/// </summary>
	/// <value>Unique ID of Portal</value>
	[DataMember(Name = "supplier_uid", EmitDefaultValue = false)]
	public int? SupplierUid { get; set; }

	/// <summary>
	///     Name of Portal
	/// </summary>
	/// <value>Name of Portal</value>
	[DataMember(Name = "name", EmitDefaultValue = false)]
	public string Name { get; set; }

	/// <summary>
	///     Returns true if ListPortalsRecords instances are equal
	/// </summary>
	/// <param name="input">Instance of ListPortalsRecords to be compared</param>
	/// <returns>Boolean</returns>
	public bool Equals(ListPortalsRecords input)
	{
		if (input == null)
		{
			return false;
		}

		return
			(
				SupplierUid == input.SupplierUid ||
				(SupplierUid != null &&
				 SupplierUid.Equals(input.SupplierUid))
			) &&
			(
				Name == input.Name ||
				(Name != null &&
				 Name.Equals(input.Name))
			);
	}

	/// <summary>
	///     Returns the string presentation of the object
	/// </summary>
	/// <returns>String presentation of the object</returns>
	public override string ToString()
	{
		var sb = new StringBuilder();
		sb.Append("class ListPortalsRecords {\n");
		sb.Append("  SupplierUid: ").Append(SupplierUid).Append("\n");
		sb.Append("  Name: ").Append(Name).Append("\n");
		sb.Append("}\n");
		return sb.ToString();
	}

	/// <summary>
	///     Returns the JSON string presentation of the object
	/// </summary>
	/// <returns>JSON string presentation of the object</returns>
	public string ToJson()
	{
		return JsonConvert.SerializeObject(this, Formatting.Indented);
	}

	/// <summary>
	///     Returns true if objects are equal
	/// </summary>
	/// <param name="input">Object to be compared</param>
	/// <returns>Boolean</returns>
	public override bool Equals(object input)
	{
		return Equals(input as ListPortalsRecords);
	}

	/// <summary>
	///     Gets the hash code
	/// </summary>
	/// <returns>Hash code</returns>
	public override int GetHashCode()
	{
		unchecked // Overflow is fine, just wrap
		{
			int hashCode = 41;
			if (SupplierUid != null)
			{
				hashCode = hashCode * 59 + SupplierUid.GetHashCode();
			}

			if (Name != null)
			{
				hashCode = hashCode * 59 + Name.GetHashCode();
			}

			return hashCode;
		}
	}
}
